@model StoreFrontV3.DATA.EF.Product

@{
    ViewBag.Title = "Edit";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductsID)
    @Html.HiddenFor(model => model.ProdImage)
    <div class="form-group">
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.ProdImage, new { htmlAttributes = new { @class = "form-control", placeholder } })
            @Html.ValidationMessageFor(model => model.ProdImage, "", new { @class = "text-danger" })*@
            <input type="file" value="image" placeholder="Product Image" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProdName, new { htmlAttributes = new { @class = "form-control", placeholder = "Product" } })
            @Html.ValidationMessageFor(model => model.ProdName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control", placeholder = "Category" })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownList("ProdStatusID", null, htmlAttributes: new { @class = "form-control", placeholder = "Status" })
            @Html.ValidationMessageFor(model => model.ProdStatusID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitsSold, new { htmlAttributes = new { @class = "form-control", placeholder = "Units Sold" } })
            @Html.ValidationMessageFor(model => model.UnitsSold, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Price" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownList("ShippingID", null, htmlAttributes: new { @class = "form-control", placeholder = "Shipper" })
            @Html.ValidationMessageFor(model => model.ShippingID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownList("DeptID", null, htmlAttributes: new { @class = "form-control", placeholder = "Department" })
            @Html.ValidationMessageFor(model => model.DeptID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownList("EmployeeID", null, htmlAttributes: new { @class = "form-control", placeholder = "Employee" })
            @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            @Html.ActionLink("Cancel", "Index")

        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
